# Description: this workflow publishes UI packages to `latest` tag on NPM.
#
# Triggered by: whenever "Version Packages" is merged

# If successful, we will publish all updated UI packages to
#   - https://www.npmjs.com/package/@aws-amplify/ui
#   - https://www.npmjs.com/package/@aws-amplify/ui-react
#   - https://www.npmjs.com/package/@aws-amplify/ui-vue
#   - https://www.npmjs.com/package/@aws-amplify/ui-angular

name: POC / Test and Publish / latest

on: pull_request

permissions:
  contents: write # Used to push tags to GitHub

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      has-changesets: ${{ steps.has-changesets.outputs.has-changesets }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0
      - name: Check if repo has unconsumed changesets
        id: has-changesets
        uses: ./.github/actions/has-changesets
      # Note: if there are no changesets, that means that either
      #         (1) "Version Packages" PR was just merged, or
      #         (2) no commits with changesets have been merged after packages were last published.
      #
      #       In either way, we'll attempt to publish the packages. In case of (1), publish will succeed. In
      #       case of (2), `@changesets/action` will know that UI packages have already published and will
      #       skip publish.

  build-test:
    runs-on: ubuntu-latest
    needs: setup
    environment: ci
    if: ${{ needs.setup.outputs.has-changesets != 'true' }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Add Amplify CLI
        run: yarn global add @aws-amplify/cli
      - name: Get CLI versions
        id: cli-version
        run: echo "version=$(amplify --version)" >> $GITHUB_OUTPUT
      - name: Pull down AWS environments
        run: yarn pull
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_AUTH }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_AUTH }}
        working-directory: ./canary
      - name: Setup canary apps against @next
        run: yarn setup:next
        working-directory: ./canary
      - name: Run yarn install on each sample app
        run: yarn install
        working-directory: ./canary
      - name: Run yarn build on each sample app
        run: yarn build
        working-directory: ./canary
